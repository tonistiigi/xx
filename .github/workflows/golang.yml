name: golang

on:
  push:
    branches:
      - 'master'
    tags:
      - 'golang/v*'
    paths:
      - '.github/workflows/golang.yml'
      - 'golang/**'
  pull_request:
    branches:
      - 'master'
    paths:
      - '.github/workflows/golang.yml'
      - 'golang/**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Test
        uses: docker/build-push-action@v2
        with:
          context: ./golang
          file: ./golang/Dockerfile
          platforms: ${{ steps.buildx.outputs.platforms }}

  publish:
    runs-on: ubuntu-latest
    needs: test
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Evaluate target names
        id: prep
        run: |
          DOCKER_IMAGE=tonistiigi/xx
          VERSION=dummy
          if [[ $GITHUB_REF == refs/tags/golang/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/golang/v}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=${GITHUB_REF#refs/heads/}
          fi
          TAGS="${DOCKER_IMAGE}:golang-${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:golang"
          fi
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build
        uses: docker/build-push-action@v2
        with:
          context: ./golang
          file: ./golang/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
